public class Course{private String code;private String name;private int credit;public Course(){setCode("");setName("");setCredit(0);}//default constructorpublic Course(String c, String n, int cr){setCode(c);setName(n);setCredit(cr);}//overloaded constructorpublic Course(Course c){this.setCode(c.getCode());this.setName(c.getName());this.setCredit(c.getCredit());}//copy constructorpublic void setCode(String c){code = c;}//setCode()public void setName(String n){name = n;}//setName()public void setCredit(int cr){credit = cr;}//setCredit()public String getCode(){return code;}//getCode()public String getName(){return name;}//getName()public int getCredit(){return credit;}//getCredit()public void print(){
System.out.println("Code: " + getCode());System.out.println("Name: " + getName());System.out.println("Credits: " + getCredit());System.out.println("\n");}//printpublic static void print(Course[] c){for (int i = 0; i < c.length ; ++i){c[i].print();}//for}//print()public boolean isEqual(Course c){return this.getCode().equals(c.getCode()) &&this.getName().equals(c.getName()) &&this.getCredit() == c.getCredit();}//isEqual()public static void sort(Course[] c){int startScan, index, minIndex;Course minValue;for (startScan = 0; startScan < (c.length-1); startScan++)